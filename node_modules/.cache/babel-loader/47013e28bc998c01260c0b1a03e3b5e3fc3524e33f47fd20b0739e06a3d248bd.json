{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kota\\\\Desktop\\\\Projects\\\\recipe maker\\\\food-network\\\\src\\\\Search\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport data from '../Data/meals.json'; // Adjust the path based on your file structure\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    meal\n  } = useParams();\n  useEffect(() => {\n    const fetchData = () => {\n      const recipeData = recipes.find(item => item.id === parseInt(meal, 10));\n      setData(recipeData);\n    };\n    if (meal) {\n      fetchData();\n    }\n  }, [meal]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !data ? \"Not Found\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.image,\n        alt: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Recipe, \"tp/APv0XbT0NRfk5+xfMRLvl+Yk=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useState","useEffect","useParams","data","jsxDEV","_jsxDEV","Fragment","_Fragment","Recipe","_s","setData","meal","fetchData","recipeData","recipes","find","item","id","parseInt","children","className","src","image","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","details","instructions","_c","$RefreshReg$"],"sources":["C:/Users/kota/Desktop/Projects/recipe maker/food-network/src/Search/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport data from '../Data/meals.json'; // Adjust the path based on your file structure\r\n\r\nconst Recipe = () => {\r\n  const [data, setData] = useState(null);\r\n  const { meal } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      const recipeData = recipes.find((item) => item.id === parseInt(meal, 10));\r\n      setData(recipeData);\r\n    };\r\n\r\n    if (meal) {\r\n      fetchData();\r\n    }\r\n  }, [meal]);\r\n\r\n  return (\r\n    <>\r\n      {!data ? \"Not Found\" :  \r\n        <div className='msg'>\r\n          <img src={data.image} alt={data.title} />\r\n          <div className='info'>\r\n            <h1>{data.title}</h1>\r\n            <p>{data.details}</p>\r\n            <h3>Instructions:</h3>\r\n            <p>{data.instructions}</p>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEW;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,UAAU,GAAGC,OAAO,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAACP,IAAI,EAAE,EAAE,CAAC,CAAC;MACzED,OAAO,CAACG,UAAU,CAAC;IACrB,CAAC;IAED,IAAIF,IAAI,EAAE;MACRC,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,oBACEN,OAAA,CAAAE,SAAA;IAAAY,QAAA,EACG,CAAChB,IAAI,GAAG,WAAW,gBAClBE,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBd,OAAA;QAAKgB,GAAG,EAAElB,IAAI,CAACmB,KAAM;QAACC,GAAG,EAAEpB,IAAI,CAACqB;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCvB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBd,OAAA;UAAAc,QAAA,EAAKhB,IAAI,CAACqB;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBvB,OAAA;UAAAc,QAAA,EAAIhB,IAAI,CAAC0B;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBvB,OAAA;UAAAc,QAAA,EAAI;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBvB,OAAA;UAAAc,QAAA,EAAIhB,IAAI,CAAC2B;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAER,CAAC;AAEP,CAAC;AAACnB,EAAA,CA9BID,MAAM;EAAA,QAEON,SAAS;AAAA;AAAA6B,EAAA,GAFtBvB,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}