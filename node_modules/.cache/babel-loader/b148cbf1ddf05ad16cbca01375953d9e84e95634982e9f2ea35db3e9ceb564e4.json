{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kota\\\\Desktop\\\\Projects\\\\recipe maker\\\\food-network\\\\src\\\\Components\\\\Dishes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport dishesData from '../Data/dishes.json'; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dishes = () => {\n  _s();\n  const {\n    stateId\n  } = useParams(); // Retrieve the stateId from the URL\n  const dishes = dishesData[stateId]; // Get the dishes based on the stateId\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dishes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), dishes ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dishes.map(dish => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: dish.image,\n          alt: dish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dish.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dish.instructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, dish.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No dishes found for this state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(Dishes, \"XfkGcEkBn5wIN8KA6c3snSo96YU=\", false, function () {\n  return [useParams];\n});\n_c = Dishes;\nexport default Dishes;\nvar _c;\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"names":["React","useParams","dishesData","jsxDEV","_jsxDEV","Dishes","_s","stateId","dishes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dish","src","image","alt","name","description","instructions","id","_c","$RefreshReg$"],"sources":["C:/Users/kota/Desktop/Projects/recipe maker/food-network/src/Components/Dishes.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport dishesData from '../Data/dishes.json'; // Ensure the path is correct\r\n\r\nconst Dishes = () => {\r\n    const { stateId } = useParams(); // Retrieve the stateId from the URL\r\n    const dishes = dishesData[stateId]; // Get the dishes based on the stateId\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Dishes</h1>\r\n        {dishes ? (\r\n          <ul>\r\n            {dishes.map(dish => (\r\n              <li key={dish.id}>\r\n                <img src={dish.image} alt={dish.name} />\r\n                <h2>{dish.name}</h2>\r\n                <p>{dish.description}</p>\r\n                <p>{dish.instructions}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No dishes found for this state.</p>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Dishes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAMO,MAAM,GAAGN,UAAU,CAACK,OAAO,CAAC,CAAC,CAAC;;EAEpC,oBACEH,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdL,MAAM,gBACLJ,OAAA;MAAAK,QAAA,EACGD,MAAM,CAACM,GAAG,CAACC,IAAI,iBACdX,OAAA;QAAAK,QAAA,gBACEL,OAAA;UAAKY,GAAG,EAAED,IAAI,CAACE,KAAM;UAACC,GAAG,EAAEH,IAAI,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxCT,OAAA;UAAAK,QAAA,EAAKM,IAAI,CAACI;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBT,OAAA;UAAAK,QAAA,EAAIM,IAAI,CAACK;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBT,OAAA;UAAAK,QAAA,EAAIM,IAAI,CAACM;QAAY;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJnBE,IAAI,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELT,OAAA;MAAAK,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAP,EAAA,CAvBKD,MAAM;EAAA,QACYJ,SAAS;AAAA;AAAAsB,EAAA,GAD3BlB,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}