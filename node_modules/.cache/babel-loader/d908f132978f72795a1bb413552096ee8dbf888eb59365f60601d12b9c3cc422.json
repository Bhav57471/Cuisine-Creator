{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kota\\\\Desktop\\\\Projects\\\\recipe maker\\\\food-network\\\\src\\\\Search\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const {\n    stateId\n  } = useParams(); // Retrieve the stateId from the URL\n  const dishes = dishesData[stateId]; // Get the dishes based on the stateId\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"-Dishes Categories-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), dishes ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dish-list\",\n      children: dishes.map(dish => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dish-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/state/${stateId}/dishes/${dish.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dish.image,\n            alt: dish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dish.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dish.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)]\n      }, dish.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-dishes-message\",\n      children: \"No dishes found for this state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"XfkGcEkBn5wIN8KA6c3snSo96YU=\", true);\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Cards","_s","stateId","useParams","dishes","dishesData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dish","to","id","src","image","alt","name","title","description","_c","$RefreshReg$"],"sources":["C:/Users/kota/Desktop/Projects/recipe maker/food-network/src/Search/Cards.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cards = () => {\r\n  const { stateId } = useParams(); // Retrieve the stateId from the URL\r\n  const dishes = dishesData[stateId]; // Get the dishes based on the stateId\r\n\r\n  return (\r\n    <div className=\"dishes-container\">\r\n      <h1>-Dishes Categories-</h1>\r\n      {dishes ? (\r\n        <ul className=\"dish-list\">\r\n          {dishes.map((dish) => (\r\n            <li key={dish.id} className=\"dish-card\">\r\n              <Link to={`/state/${stateId}/dishes/${dish.id}`}>\r\n                <img src={dish.image} alt={dish.name} />\r\n              </Link>\r\n              <h2>{dish.title}</h2>\r\n              <p>{dish.description}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"no-dishes-message\">No dishes found for this state.</p>\r\n      )}\r\n    </div>\r\n          );\r\n        }\r\n  \r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAQ,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAMC,MAAM,GAAGC,UAAU,CAACH,OAAO,CAAC,CAAC,CAAC;;EAEpC,oBACEH,OAAA;IAAKO,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BR,OAAA;MAAAQ,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BP,MAAM,gBACLL,OAAA;MAAIO,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBH,MAAM,CAACQ,GAAG,CAAEC,IAAI,iBACfd,OAAA;QAAkBO,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACrCR,OAAA,CAACF,IAAI;UAACiB,EAAE,EAAE,UAAUZ,OAAO,WAAWW,IAAI,CAACE,EAAE,EAAG;UAAAR,QAAA,eAC9CR,OAAA;YAAKiB,GAAG,EAAEH,IAAI,CAACI,KAAM;YAACC,GAAG,EAAEL,IAAI,CAACM;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACPZ,OAAA;UAAAQ,QAAA,EAAKM,IAAI,CAACO;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBZ,OAAA;UAAAQ,QAAA,EAAIM,IAAI,CAACQ;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALlBE,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELZ,OAAA;MAAGO,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEF,CAAC;AAAAV,EAAA,CAxBHD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}