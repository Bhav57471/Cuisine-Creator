{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kota\\\\Desktop\\\\Projects\\\\recipe maker\\\\food-network\\\\src\\\\Search\\\\Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    meal\n  } = useParams();\n  useEffect(() => {\n    const myFun = async () => {\n      try {\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal}`);\n        const jsonData = await response.json();\n        setData(jsonData.meals ? jsonData.meals[0] : null); // Check if `meals` exists\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (meal) {\n      myFun();\n    }\n  }, [meal]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !data ? \"Not Found\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.strMealThumb,\n        alt: data.strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Recipe Detail's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: data.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Recipe, \"tp/APv0XbT0NRfk5+xfMRLvl+Yk=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Recipe","_s","data","setData","meal","myFun","response","fetch","jsonData","json","meals","error","console","children","className","src","strMealThumb","alt","strMeal","fileName","_jsxFileName","lineNumber","columnNumber","strInstructions","_c","$RefreshReg$"],"sources":["C:/Users/kota/Desktop/Projects/recipe maker/food-network/src/Search/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Recipe = () => {\r\n  const [data, setData] = useState(null);\r\n  const { meal } = useParams();\r\n\r\n  useEffect(() => {\r\n    const myFun = async () => {\r\n      try {\r\n        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${meal}`);\r\n        const jsonData = await response.json();\r\n        setData(jsonData.meals ? jsonData.meals[0] : null); // Check if `meals` exists\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    if (meal) {\r\n      myFun();\r\n    }\r\n  }, [meal]);\r\n\r\n  return (\r\n    <>\r\n      {!data ? (\r\n        \"Not Found\"\r\n      ) : (\r\n        <div className='msg'>\r\n          <img src={data.strMealThumb} alt={data.strMeal} />\r\n          <div className='info'>\r\n            <h1>Recipe Detail's</h1>\r\n            <button>{data.strMeal}</button>\r\n            <h3>Instructions:</h3>\r\n            <p>{data.strInstructions}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEW;EAAK,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwDH,IAAI,EAAE,CAAC;QAC5F,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCN,OAAO,CAACK,QAAQ,CAACE,KAAK,GAAGF,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,IAAIP,IAAI,EAAE;MACRC,KAAK,CAAC,CAAC;IACT;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACG,CAACX,IAAI,GACJ,WAAW,gBAEXL,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBhB,OAAA;QAAKkB,GAAG,EAAEb,IAAI,CAACc,YAAa;QAACC,GAAG,EAAEf,IAAI,CAACgB;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDzB,OAAA;QAAKiB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBhB,OAAA;UAAAgB,QAAA,EAAI;QAAe;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBzB,OAAA;UAAAgB,QAAA,EAASX,IAAI,CAACgB;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC/BzB,OAAA;UAAAgB,QAAA,EAAI;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBzB,OAAA;UAAAgB,QAAA,EAAIX,IAAI,CAACqB;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP,CAAC;AAACrB,EAAA,CArCID,MAAM;EAAA,QAEOL,SAAS;AAAA;AAAA6B,EAAA,GAFtBxB,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}