{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kota\\\\Desktop\\\\Projects\\\\recipe maker\\\\food-network\\\\src\\\\Components\\\\DishPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DishPage = () => {\n  _s();\n  const {\n    stateId,\n    dishId\n  } = useParams();\n  const [dish, setDish] = useState(null);\n  useEffect(() => {\n    // Fetch the JSON file from the public directory\n    fetch('/dishes.json').then(response => response.json()).then(data => {\n      var _data$stateId;\n      // Assuming your JSON structure includes states and their dishes\n      const dishData = (_data$stateId = data[stateId]) === null || _data$stateId === void 0 ? void 0 : _data$stateId.dishes[dishId];\n      setDish(dishData);\n    }).catch(error => {\n      console.error('Error fetching the dish data:', error);\n    });\n  }, [stateId, dishId]);\n  if (!dish) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dish.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dish.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dish.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(DishPage, \"tHIIb1ELnFldbcspjI+n6v2GIJw=\", false, function () {\n  return [useParams];\n});\n_c = DishPage;\nexport default DishPage;\nvar _c;\n$RefreshReg$(_c, \"DishPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","DishPage","_s","stateId","dishId","dish","setDish","fetch","then","response","json","data","_data$stateId","dishData","dishes","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","ingredients","map","ingredient","index","_c","$RefreshReg$"],"sources":["C:/Users/kota/Desktop/Projects/recipe maker/food-network/src/Components/DishPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst DishPage = () => {\r\n  const { stateId, dishId } = useParams();\r\n  const [dish, setDish] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the JSON file from the public directory\r\n    fetch('/dishes.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Assuming your JSON structure includes states and their dishes\r\n        const dishData = data[stateId]?.dishes[dishId];\r\n        setDish(dishData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching the dish data:', error);\r\n      });\r\n  }, [stateId, dishId]);\r\n\r\n  if (!dish) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{dish.name}</h1>\r\n      <p>{dish.description}</p>\r\n      <h2>Ingredients:</h2>\r\n      <ul>\r\n        {dish.ingredients.map((ingredient, index) => (\r\n          <li key={index}>{ingredient}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EACvC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MAAA,IAAAC,aAAA;MACd;MACA,MAAMC,QAAQ,IAAAD,aAAA,GAAGD,IAAI,CAACR,OAAO,CAAC,cAAAS,aAAA,uBAAbA,aAAA,CAAeE,MAAM,CAACV,MAAM,CAAC;MAC9CE,OAAO,CAACO,QAAQ,CAAC;IACnB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,CAACb,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOL,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAKb,IAAI,CAACkB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBtB,OAAA;MAAAkB,QAAA,EAAIb,IAAI,CAACmB;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,EACGb,IAAI,CAACoB,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACtC5B,OAAA;QAAAkB,QAAA,EAAiBS;MAAU,GAAlBC,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlCID,QAAQ;EAAA,QACgBH,SAAS;AAAA;AAAA+B,EAAA,GADjC5B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}